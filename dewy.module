<?php
/**
 * @file
 * Code for the Dewy module
 */

/**
 * Implements hook_menu()
 */

function dewy_menu() {
    $items = array();

    $items['admin/config/system/dewy'] = array(
        'title' => 'Dewy',
        'description' => 'Dewy configuration page.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('dewy_config'),
        'access arguments' => array('administer site configuration'),
        'type' => MENU_NORMAL_ITEM,
    );

    $items['admin/reports/dewy'] = array(
        'title' => 'Dewy report',
        'description' => 'Information about your site for Dewy.',
        'file' => 'dewy_report.inc',
        'page callback' => 'dewy_report',
        'access callback' => 'dewy_report_access_callback',
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

function dewy_report_access_callback() {
    if (variable_get('dewy_enabled', 0) && variable_get('dewy_token', 0)) {
        $allowed_viewers = array('127.0.0.1', '::1', gethostbyname('dewy.io'));
        foreach ($allowed_viewers as $viewer) {
            if (ip_address() == $viewer) {
                if (isset($_POST['token']) && $_POST['token'] == variable_get('dewy_token')) {
                    return TRUE;
                }
            }
        }
    }
    return FALSE;
}

function dewy_page_build(&$page) {
    $settings = array(
        'url' => url(drupal_get_path('module', 'dewy').'/php/dewy_counter.php'),
        'data' => array(
            'path' => current_path(),
            'drupal' => DRUPAL_ROOT,
        ),
    );
    $page['content'][] = array(
        '#attached' => array(     
            'js' => array(
                drupal_get_path('module', 'dewy') . '/js/dewy_counter.js' => array(),
            ),
        ),
    );
    $page['content']['#attached']['js'][] = array(
        'data' => array('dewy' => $settings),
        'type' => 'setting',
    );
}

function dewy_config($form, &$form_state) {
    $form['dewy_enabled'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enable Dewy to report on this site'),
        '#default_value' => variable_get('dewy_enabled', 1),
        '#description' => t('Enable Dewy to communicate with this site. Turning this off prevents Dewy from monitoring your site.'),
    );
    $form['dewy_users'] = array(
        '#type' => 'checkbox',
        '#title' => t('Include usernames and emails'),
        '#default_value' => variable_get('dewy_users', 1),
        '#description' => t('Allow Dewy to pull username and email data.'),
    );
    $form['dewy_content'] = array(
        '#type' => 'checkbox',
        '#title' => t('Include content'),
        '#default_value' => variable_get('dewy_content', 1),
        '#description' => t('Allow Dewy to pull content data.'),
    );
    $form['dewy_api_key'] = array(
        '#type' => 'textfield',
        '#title' => t('Dewy API key'),
        '#default_value' => variable_get('dewy_api_key', ''),
        '#size' => 40,
        '#maxlength' => 36,
        '#description' => t('The API key of your Dewy account. This is required to link this site to your Dewy account. <a href="http://dewy.io">Get a Dewy API key</a>.'),
        '#required' => TRUE,
    );
    $form['#validate'][] = 'dewy_validate';

    return system_settings_form($form);
}

function dewy_validate(&$elements, &$form_state, $form_id = NULL) {
    global $base_url;

    if ($form_state['values']['dewy_enabled'] && !variable_get('dewy_token', 0)) {
        DewyToken::createToken();
    } 
    else if (!$form_state['values']['dewy_enabled']) {
        DewyToken::deleteToken();
    }

    $data = 
        'apikey='.$form_state['values']['dewy_api_key'].'&'.
        'token='.variable_get('dewy_token').'&'.
        'baseurl='.$base_url.'&'.
        'enabled='.$form_state['values']['dewy_enabled'].'&'.
        'read_users='.$form_state['values']['dewy_users'].'&'.
        'read_content='.$form_state['values']['dewy_content'];

    $options = array(
        'method' => 'POST',
        'data' => $data,
        'timeout' => 15,
        'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
    );
    $result = drupal_http_request('http://api.dewy.io/1.0/sites', $options);
    if ($result->code != '200') {
        if ($result->code == '500' || $result->code == '503') {
            form_set_error('dewy_api_key','Dewy is unreachable, the API key cannot be verified at this time.');
        }
        else {
            form_set_error('dewy_api_key', $result->data);
        }
    }
}